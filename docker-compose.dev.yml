# Engine Framework - Development Docker Compose
# This file provides a common development environment

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: engine_dev
      POSTGRES_USER: engine
      POSTGRES_PASSWORD: engine123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U engine -d engine_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Message Queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage (S3 Compatible)
  minio:
    image: minio/minio:latest
    environment:
      MINIO_ACCESS_KEY: engine_access_key
      MINIO_SECRET_KEY: engine_secret_key
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development API Server (to be overridden per repository)
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://engine:engine123@postgres:5432/engine_dev
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=engine_access_key
      - MINIO_SECRET_KEY=engine_secret_key
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/__pycache__
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
  redis_data:
  minio_data: