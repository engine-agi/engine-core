# Release Workflow Template
# Usage: Copy to .github/workflows/release.yml in each repository

name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## Changes
          - See changelog for details

          ## Installation
          ```bash
          pip install engine-${{ github.event.repository.name }}==${{ github.ref_name }}
          ```

  notify:
    runs-on: ubuntu-latest
    needs: release
    if: success()

    steps:
    - name: Notify Slack
      uses: slackapi/slack-github-action@v1.24.0
      with:
        channel-id: 'releases'
        slack-message: "ðŸš€ New release: ${{ github.event.repository.name }} ${{ github.ref_name }}"
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}